//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NMS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NMSEntities : DbContext
    {
        public NMSEntities()
            : base("name=NMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Class> Classes { get; set; }
        public virtual DbSet<Class_Has_Subject> Class_Has_Subject { get; set; }
        public virtual DbSet<Module> Modules { get; set; }
        public virtual DbSet<Note> Notes { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Subject> Subjects { get; set; }
        public virtual DbSet<Subject_Has_Module> Subject_Has_Module { get; set; }
        public virtual DbSet<Teacher> Teachers { get; set; }
        public virtual DbSet<Teacher_Teaches_subject> Teacher_Teaches_subject { get; set; }
        public virtual DbSet<GroupMember> GroupMembers { get; set; }
        public virtual DbSet<GroupMessage> GroupMessages { get; set; }
        public virtual DbSet<GroupMessageTeacher> GroupMessageTeachers { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<GroupMemberTeacher> GroupMemberTeachers { get; set; }
        public virtual DbSet<NGroupMemberTeacher> NGroupMemberTeachers { get; set; }
        public virtual DbSet<NGroupMessageTeacher> NGroupMessageTeachers { get; set; }
        public virtual DbSet<NGroup> NGroups { get; set; }
        public virtual DbSet<NGroupMemberTeacher1> NGroupMemberTeachers1 { get; set; }
        public virtual DbSet<NGroupMessage> NGroupMessages { get; set; }
        public virtual DbSet<NGroupMessageTeacher1> NGroupMessageTeachers1 { get; set; }
    
        public virtual int AddNotes(string tID, string moduleID, string subID, string classID, byte[] pDFFile)
        {
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var moduleIDParameter = moduleID != null ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(string));
    
            var subIDParameter = subID != null ?
                new ObjectParameter("SubID", subID) :
                new ObjectParameter("SubID", typeof(string));
    
            var classIDParameter = classID != null ?
                new ObjectParameter("ClassID", classID) :
                new ObjectParameter("ClassID", typeof(string));
    
            var pDFFileParameter = pDFFile != null ?
                new ObjectParameter("PDFFile", pDFFile) :
                new ObjectParameter("PDFFile", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddNotes", tIDParameter, moduleIDParameter, subIDParameter, classIDParameter, pDFFileParameter);
        }
    
        public virtual ObjectResult<GetAllFilesByOrder_Result> GetAllFilesByOrder(string tid)
        {
            var tidParameter = tid != null ?
                new ObjectParameter("tid", tid) :
                new ObjectParameter("tid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllFilesByOrder_Result>("GetAllFilesByOrder", tidParameter);
        }
    
        public virtual int GetAllPDFFilesByOrder(string tid)
        {
            var tidParameter = tid != null ?
                new ObjectParameter("tid", tid) :
                new ObjectParameter("tid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetAllPDFFilesByOrder", tidParameter);
        }
    
        public virtual int GetAllPDFSFilesByOrder(string tid)
        {
            var tidParameter = tid != null ?
                new ObjectParameter("tid", tid) :
                new ObjectParameter("tid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetAllPDFSFilesByOrder", tidParameter);
        }
    
        public virtual ObjectResult<Note> GetAllTHEPDFFilesByOrder(string tid)
        {
            var tidParameter = tid != null ?
                new ObjectParameter("tid", tid) :
                new ObjectParameter("tid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Note>("GetAllTHEPDFFilesByOrder", tidParameter);
        }
    
        public virtual ObjectResult<Note> GetAllTHEPDFFilesByOrder(string tid, MergeOption mergeOption)
        {
            var tidParameter = tid != null ?
                new ObjectParameter("tid", tid) :
                new ObjectParameter("tid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Note>("GetAllTHEPDFFilesByOrder", mergeOption, tidParameter);
        }
    
        public virtual int AddGroupMemberTeacher(string groupID, string tID, string username)
        {
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddGroupMemberTeacher", groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual int CreateGroup(string groupID, string groupName, byte[] groupIcon, string classID, string subID)
        {
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var groupIconParameter = groupIcon != null ?
                new ObjectParameter("GroupIcon", groupIcon) :
                new ObjectParameter("GroupIcon", typeof(byte[]));
    
            var classIDParameter = classID != null ?
                new ObjectParameter("classID", classID) :
                new ObjectParameter("classID", typeof(string));
    
            var subIDParameter = subID != null ?
                new ObjectParameter("subID", subID) :
                new ObjectParameter("subID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateGroup", groupIDParameter, groupNameParameter, groupIconParameter, classIDParameter, subIDParameter);
        }
    
        public virtual ObjectResult<Group> CreateGroups(string groupID, string groupName, byte[] groupIcon, string classID, string subID)
        {
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var groupIconParameter = groupIcon != null ?
                new ObjectParameter("GroupIcon", groupIcon) :
                new ObjectParameter("GroupIcon", typeof(byte[]));
    
            var classIDParameter = classID != null ?
                new ObjectParameter("classID", classID) :
                new ObjectParameter("classID", typeof(string));
    
            var subIDParameter = subID != null ?
                new ObjectParameter("subID", subID) :
                new ObjectParameter("subID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Group>("CreateGroups", groupIDParameter, groupNameParameter, groupIconParameter, classIDParameter, subIDParameter);
        }
    
        public virtual ObjectResult<Group> CreateGroups(string groupID, string groupName, byte[] groupIcon, string classID, string subID, MergeOption mergeOption)
        {
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var groupIconParameter = groupIcon != null ?
                new ObjectParameter("GroupIcon", groupIcon) :
                new ObjectParameter("GroupIcon", typeof(byte[]));
    
            var classIDParameter = classID != null ?
                new ObjectParameter("classID", classID) :
                new ObjectParameter("classID", typeof(string));
    
            var subIDParameter = subID != null ?
                new ObjectParameter("subID", subID) :
                new ObjectParameter("subID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Group>("CreateGroups", mergeOption, groupIDParameter, groupNameParameter, groupIconParameter, classIDParameter, subIDParameter);
        }
    
        public virtual int AddGroupMemberTeachers(string groupID, string tID, string username)
        {
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddGroupMemberTeachers", groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual int AddGroupMemberTeacherss(string groupID, string tID, string username)
        {
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddGroupMemberTeacherss", groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<GroupMemberTeacher> AddGroupMemberTeachersss(string groupID, string tID, string username)
        {
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GroupMemberTeacher>("AddGroupMemberTeachersss", groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<GroupMemberTeacher> AddGroupMemberTeachersss(string groupID, string tID, string username, MergeOption mergeOption)
        {
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GroupMemberTeacher>("AddGroupMemberTeachersss", mergeOption, groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<ShowGroupMessageTeacher_Result> ShowGroupMessageTeacher(string groupID)
        {
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowGroupMessageTeacher_Result>("ShowGroupMessageTeacher", groupIDParameter);
        }
    
        public virtual ObjectResult<GroupMessageTeacher> ShowGroupMessageTeachers(string groupID)
        {
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GroupMessageTeacher>("ShowGroupMessageTeachers", groupIDParameter);
        }
    
        public virtual ObjectResult<GroupMessageTeacher> ShowGroupMessageTeachers(string groupID, MergeOption mergeOption)
        {
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GroupMessageTeacher>("ShowGroupMessageTeachers", mergeOption, groupIDParameter);
        }
    
        public virtual ObjectResult<CreateGroupMessageTeacher_Result> CreateGroupMessageTeacher(string groupid)
        {
            var groupidParameter = groupid != null ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CreateGroupMessageTeacher_Result>("CreateGroupMessageTeacher", groupidParameter);
        }
    
        public virtual ObjectResult<GroupMessageTeacher> CreateGroupMessageTeachers(string groupid)
        {
            var groupidParameter = groupid != null ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GroupMessageTeacher>("CreateGroupMessageTeachers", groupidParameter);
        }
    
        public virtual ObjectResult<GroupMessageTeacher> CreateGroupMessageTeachers(string groupid, MergeOption mergeOption)
        {
            var groupidParameter = groupid != null ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GroupMessageTeacher>("CreateGroupMessageTeachers", mergeOption, groupidParameter);
        }
    
        public virtual ObjectResult<ProjectGroupMessageTeacher_Result> ProjectGroupMessageTeacher(string groupid)
        {
            var groupidParameter = groupid != null ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProjectGroupMessageTeacher_Result>("ProjectGroupMessageTeacher", groupidParameter);
        }
    
        public virtual ObjectResult<GroupMessageTeacher> ProjectGroupMessageTeachers(string groupid)
        {
            var groupidParameter = groupid != null ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GroupMessageTeacher>("ProjectGroupMessageTeachers", groupidParameter);
        }
    
        public virtual ObjectResult<GroupMessageTeacher> ProjectGroupMessageTeachers(string groupid, MergeOption mergeOption)
        {
            var groupidParameter = groupid != null ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GroupMessageTeacher>("ProjectGroupMessageTeachers", mergeOption, groupidParameter);
        }
    
        public virtual int NAddGroupMemberTeachers(string groupID, string tID, string username)
        {
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NAddGroupMemberTeachers", groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual int NCreateGroup(string groupName, byte[] groupIcon, string classID, string subID)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var groupIconParameter = groupIcon != null ?
                new ObjectParameter("GroupIcon", groupIcon) :
                new ObjectParameter("GroupIcon", typeof(byte[]));
    
            var classIDParameter = classID != null ?
                new ObjectParameter("classID", classID) :
                new ObjectParameter("classID", typeof(string));
    
            var subIDParameter = subID != null ?
                new ObjectParameter("subID", subID) :
                new ObjectParameter("subID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NCreateGroup", groupNameParameter, groupIconParameter, classIDParameter, subIDParameter);
        }
    
        public virtual ObjectResult<NGroup> NCreateGroups(string groupName, byte[] groupIcon, string classID, string subID)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var groupIconParameter = groupIcon != null ?
                new ObjectParameter("GroupIcon", groupIcon) :
                new ObjectParameter("GroupIcon", typeof(byte[]));
    
            var classIDParameter = classID != null ?
                new ObjectParameter("classID", classID) :
                new ObjectParameter("classID", typeof(string));
    
            var subIDParameter = subID != null ?
                new ObjectParameter("subID", subID) :
                new ObjectParameter("subID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroup>("NCreateGroups", groupNameParameter, groupIconParameter, classIDParameter, subIDParameter);
        }
    
        public virtual ObjectResult<NGroup> NCreateGroups(string groupName, byte[] groupIcon, string classID, string subID, MergeOption mergeOption)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var groupIconParameter = groupIcon != null ?
                new ObjectParameter("GroupIcon", groupIcon) :
                new ObjectParameter("GroupIcon", typeof(byte[]));
    
            var classIDParameter = classID != null ?
                new ObjectParameter("classID", classID) :
                new ObjectParameter("classID", typeof(string));
    
            var subIDParameter = subID != null ?
                new ObjectParameter("subID", subID) :
                new ObjectParameter("subID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroup>("NCreateGroups", mergeOption, groupNameParameter, groupIconParameter, classIDParameter, subIDParameter);
        }
    
        public virtual ObjectResult<NGroupMemberTeacher> NAddGroupMemberTeacherss(string groupID, string tID, string username)
        {
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroupMemberTeacher>("NAddGroupMemberTeacherss", groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<NGroupMemberTeacher> NAddGroupMemberTeacherss(string groupID, string tID, string username, MergeOption mergeOption)
        {
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroupMemberTeacher>("NAddGroupMemberTeacherss", mergeOption, groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> NGetGroupID(string groupName)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("NGetGroupID", groupNameParameter);
        }
    
        public virtual ObjectResult<NGroup> NGetGroupIDs(string groupName)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroup>("NGetGroupIDs", groupNameParameter);
        }
    
        public virtual ObjectResult<NGroup> NGetGroupIDs(string groupName, MergeOption mergeOption)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroup>("NGetGroupIDs", mergeOption, groupNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> NGetGroupIDss(string groupName)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("NGetGroupIDss", groupNameParameter);
        }
    
        public virtual int NInsertGroupMemberTeacher(Nullable<int> groupID, string tID, string username)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NInsertGroupMemberTeacher", groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<NGroupMemberTeacher> NInsertGroupMemberTeachers(Nullable<int> groupID, string tID, string username)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroupMemberTeacher>("NInsertGroupMemberTeachers", groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<NGroupMemberTeacher> NInsertGroupMemberTeachers(Nullable<int> groupID, string tID, string username, MergeOption mergeOption)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroupMemberTeacher>("NInsertGroupMemberTeachers", mergeOption, groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual int NMakeGroups(string groupName, byte[] groupIcon, string classID, string subID)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var groupIconParameter = groupIcon != null ?
                new ObjectParameter("GroupIcon", groupIcon) :
                new ObjectParameter("GroupIcon", typeof(byte[]));
    
            var classIDParameter = classID != null ?
                new ObjectParameter("classID", classID) :
                new ObjectParameter("classID", typeof(string));
    
            var subIDParameter = subID != null ?
                new ObjectParameter("subID", subID) :
                new ObjectParameter("subID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NMakeGroups", groupNameParameter, groupIconParameter, classIDParameter, subIDParameter);
        }
    
        public virtual ObjectResult<NGroup> NMakeGroupss(string groupName, byte[] groupIcon, string classID, string subID)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var groupIconParameter = groupIcon != null ?
                new ObjectParameter("GroupIcon", groupIcon) :
                new ObjectParameter("GroupIcon", typeof(byte[]));
    
            var classIDParameter = classID != null ?
                new ObjectParameter("classID", classID) :
                new ObjectParameter("classID", typeof(string));
    
            var subIDParameter = subID != null ?
                new ObjectParameter("subID", subID) :
                new ObjectParameter("subID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroup>("NMakeGroupss", groupNameParameter, groupIconParameter, classIDParameter, subIDParameter);
        }
    
        public virtual ObjectResult<NGroup> NMakeGroupss(string groupName, byte[] groupIcon, string classID, string subID, MergeOption mergeOption)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var groupIconParameter = groupIcon != null ?
                new ObjectParameter("GroupIcon", groupIcon) :
                new ObjectParameter("GroupIcon", typeof(byte[]));
    
            var classIDParameter = classID != null ?
                new ObjectParameter("classID", classID) :
                new ObjectParameter("classID", typeof(string));
    
            var subIDParameter = subID != null ?
                new ObjectParameter("subID", subID) :
                new ObjectParameter("subID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroup>("NMakeGroupss", mergeOption, groupNameParameter, groupIconParameter, classIDParameter, subIDParameter);
        }
    
        public virtual ObjectResult<NGetGroupIDs1_Result> NGetGroupIDs1(string groupName)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGetGroupIDs1_Result>("NGetGroupIDs1", groupNameParameter);
        }
    
        public virtual ObjectResult<Group> NGetGroupIDsss(string groupName)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Group>("NGetGroupIDsss", groupNameParameter);
        }
    
        public virtual ObjectResult<Group> NGetGroupIDsss(string groupName, MergeOption mergeOption)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Group>("NGetGroupIDsss", mergeOption, groupNameParameter);
        }
    
        public virtual int NInsertGroupMemberTeachers1(Nullable<int> groupID, string tID, string username)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NInsertGroupMemberTeachers1", groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<NGroupMemberTeacher> NInsertGroupMemberTeacherss(Nullable<int> groupID, string tID, string username)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroupMemberTeacher>("NInsertGroupMemberTeacherss", groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<NGroupMemberTeacher> NInsertGroupMemberTeacherss(Nullable<int> groupID, string tID, string username, MergeOption mergeOption)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroupMemberTeacher>("NInsertGroupMemberTeacherss", mergeOption, groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<NGroupMemberTeacher> NInsertGroupMemberTeacher2(Nullable<int> groupID, string tID, string username)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroupMemberTeacher>("NInsertGroupMemberTeacher2", groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<NGroupMemberTeacher> NInsertGroupMemberTeacher2(Nullable<int> groupID, string tID, string username, MergeOption mergeOption)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroupMemberTeacher>("NInsertGroupMemberTeacher2", mergeOption, groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual int NNInsertGroupMemberTeachers(Nullable<int> groupID, string tID, string username)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NNInsertGroupMemberTeachers", groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<NGroupMemberTeacher1> NNNInsertGroupMemberTeachers(Nullable<int> groupID, string tID, string username)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroupMemberTeacher1>("NNNInsertGroupMemberTeachers", groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<NGroupMemberTeacher1> NNNInsertGroupMemberTeachers(Nullable<int> groupID, string tID, string username, MergeOption mergeOption)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroupMemberTeacher1>("NNNInsertGroupMemberTeachers", mergeOption, groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual int NEInsertGroupMemberTeachers(Nullable<int> groupID, string tID, string username)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NEInsertGroupMemberTeachers", groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<NGroupMemberTeacher1> NEWInsertGroupMemberTeachers(Nullable<int> groupID, string tID, string username)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroupMemberTeacher1>("NEWInsertGroupMemberTeachers", groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<NGroupMemberTeacher1> NEWInsertGroupMemberTeachers(Nullable<int> groupID, string tID, string username, MergeOption mergeOption)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroupMemberTeacher1>("NEWInsertGroupMemberTeachers", mergeOption, groupIDParameter, tIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<NGetAllGroup_Result> NGetAllGroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGetAllGroup_Result>("NGetAllGroup");
        }
    
        public virtual ObjectResult<NGroup> NGetAllGroups()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroup>("NGetAllGroups");
        }
    
        public virtual ObjectResult<NGroup> NGetAllGroups(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroup>("NGetAllGroups", mergeOption);
        }
    
        public virtual ObjectResult<GetAllGroupMessage_Result> GetAllGroupMessage(Nullable<int> groupID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllGroupMessage_Result>("GetAllGroupMessage", groupIDParameter);
        }
    
        public virtual ObjectResult<NGroupMessageTeacher1> NGetAllGroupMessage(Nullable<int> groupID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroupMessageTeacher1>("NGetAllGroupMessage", groupIDParameter);
        }
    
        public virtual ObjectResult<NGroupMessageTeacher1> NGetAllGroupMessage(Nullable<int> groupID, MergeOption mergeOption)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroupMessageTeacher1>("NGetAllGroupMessage", mergeOption, groupIDParameter);
        }
    
        public virtual ObjectResult<GetGroupChat_Result> GetGroupChat(string tid)
        {
            var tidParameter = tid != null ?
                new ObjectParameter("tid", tid) :
                new ObjectParameter("tid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGroupChat_Result>("GetGroupChat", tidParameter);
        }
    
        public virtual ObjectResult<NGroup> NGetGroupChat(string tid)
        {
            var tidParameter = tid != null ?
                new ObjectParameter("tid", tid) :
                new ObjectParameter("tid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroup>("NGetGroupChat", tidParameter);
        }
    
        public virtual ObjectResult<NGroup> NGetGroupChat(string tid, MergeOption mergeOption)
        {
            var tidParameter = tid != null ?
                new ObjectParameter("tid", tid) :
                new ObjectParameter("tid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroup>("NGetGroupChat", mergeOption, tidParameter);
        }
    
        public virtual ObjectResult<GetTeachersNotes_Result> GetTeachersNotes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTeachersNotes_Result>("GetTeachersNotes");
        }
    
        public virtual ObjectResult<Note> GetTeachersPdfNotes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Note>("GetTeachersPdfNotes");
        }
    
        public virtual ObjectResult<Note> GetTeachersPdfNotes(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Note>("GetTeachersPdfNotes", mergeOption);
        }
    
        public virtual int InsertMessageIntoGroup(Nullable<int> groupID, string tID, string message, Nullable<System.TimeSpan> time, byte[] media)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.TimeSpan));
    
            var mediaParameter = media != null ?
                new ObjectParameter("Media", media) :
                new ObjectParameter("Media", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertMessageIntoGroup", groupIDParameter, tIDParameter, messageParameter, timeParameter, mediaParameter);
        }
    
        public virtual ObjectResult<NGroupMessageTeacher1> NInsertMessageIntoGroup(Nullable<int> groupID, string tID, string message, Nullable<System.TimeSpan> time, byte[] media)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.TimeSpan));
    
            var mediaParameter = media != null ?
                new ObjectParameter("Media", media) :
                new ObjectParameter("Media", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroupMessageTeacher1>("NInsertMessageIntoGroup", groupIDParameter, tIDParameter, messageParameter, timeParameter, mediaParameter);
        }
    
        public virtual ObjectResult<NGroupMessageTeacher1> NInsertMessageIntoGroup(Nullable<int> groupID, string tID, string message, Nullable<System.TimeSpan> time, byte[] media, MergeOption mergeOption)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var tIDParameter = tID != null ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.TimeSpan));
    
            var mediaParameter = media != null ?
                new ObjectParameter("Media", media) :
                new ObjectParameter("Media", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NGroupMessageTeacher1>("NInsertMessageIntoGroup", mergeOption, groupIDParameter, tIDParameter, messageParameter, timeParameter, mediaParameter);
        }
    }
}
